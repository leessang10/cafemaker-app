---
description: 
globs: 
alwaysApply: false
---
# 카페메이커 앱 기술 스택 권장 버전

현재 프로젝트의 Expo 버전(52.0.46)을 기준으로 권장 버전들을 나열합니다.

## OS 및 시뮬레이터 권장 버전

### iOS

- iOS 버전: 13.0 이상
- Xcode 버전: 15.0 이상
- iOS 시뮬레이터: iOS 13.0 ~ 17.x

### Android

- Android 버전: API 21-34 (Android 5.0 - Android 14)
- 권장 타겟 SDK: API 33 (Android 13, Tiramisu)
- 권장 에뮬레이터 이미지: API 33 Google APIs Intel x86_64 또는 ARM 64

## 주요 라이브러리 권장 버전

### 코어 라이브러리

```json
{
  "expo": "~52.0.46",
  "react": "18.3.1",
  "react-native": "0.76.9",
  "expo-router": "~4.0.20"
}
```

### 네비게이션 관련

```json
{
  "@react-navigation/native": "^7.0.14",
  "@react-navigation/native-stack": "^7.0.14",
  "@react-navigation/bottom-tabs": "^7.2.0",
  "react-native-screens": "~4.4.0",
  "react-native-safe-area-context": "4.12.0"
}
```

### UI/애니메이션 관련

```json
{
  "react-native-reanimated": "~3.16.1",
  "react-native-gesture-handler": "~2.20.2",
  "expo-blur": "~14.0.3"
}
```

### 시스템 관련

```json
{
  "expo-status-bar": "~2.0.1",
  "expo-system-ui": "~4.0.9",
  "expo-constants": "~17.0.8",
  "expo-linking": "~7.0.5",
  "expo-splash-screen": "~0.29.24",
  "expo-web-browser": "~14.0.2"
}
```

## 개발 환경 권장 버전

### Node.js

- 버전: 18.x 이상 (20.x 권장)

### 패키지 매니저

- yarn: 1.22.x 이상
- 프로젝트는 yarn을 기본 패키지 매니저로 사용합니다.
- yarn.lock 파일을 통해 의존성 버전을 정확히 관리합니다.

### 개발 도구

- Android Studio: 2022.3.1 이상
- Xcode: 15.0 이상 (iOS 개발 시)
- VSCode: 최신 버전

## 주의사항

1. Android 에뮬레이터는 API 33 (Android 13)을 사용하는 것이 가장 안정적입니다.
2. iOS 개발의 경우 최신 버전의 Xcode를 사용하되, 시뮬레이터는 iOS 13.0 이상이면 충분합니다.
3. 라이브러리 버전은 서로 호환성이 검증된 조합이므로, 임의로 버전을 변경하지 않는 것이 좋습니다.
4. Node.js 버전은 프로젝트의 안정성을 위해 LTS 버전을 사용하는 것을 권장합니다.
5. Expo 52.0.46과 React Native 0.76.9는 2024년 4월 기준 최신 안정 버전입니다.

# 카페메이커 소비자 앱 기술 스택 선정

## 1. 기본 프로젝트 환경

| 항목        | 선택지                | 비고                              |
| :---------- | :-------------------- | :-------------------------------- |
| 프레임워크  | React Native + Expo   | Expo 기반, EAS Build 활용         |
| 언어        | TypeScript            | 타입 안정성 확보                  |
| 상태관리    | React Query / Zustand | 서버 데이터와 로컬 상태 분리 관리 |
| 라우팅      | React Navigation      | 화면 전환 및 탭 네비게이션        |
| 네트워킹    | Axios                 | API 통신용                        |
| 웹소켓 통신 | Socket.IO Client      | 실시간 채팅 기능 구현             |
| 폼 관리     | react-hook-form       | 문의 작성, 로그인 폼 등           |

## 2. 디자인/퍼블리싱

| 항목          | 선택지                                         | 비고                   |
| :------------ | :--------------------------------------------- | :--------------------- |
| UI 컴포넌트   | NativeWind (Tailwind 스타일 적용)              | 빠르고 일관된 스타일링 |
| 아이콘        | react-native-vector-icons / @expo/vector-icons | 기본 아이콘 세트 사용  |
| 이미지 최적화 | expo-image                                     | 최적화된 이미지 로딩   |

## 3. 인증/회원관리

| 항목          | 선택지                                   | 비고                         |
| :------------ | :--------------------------------------- | :--------------------------- |
| 소셜 로그인   | Expo AuthSession + 카카오/구글/애플 연동 | OAuth2 기반 소셜 로그인 구현 |
| JWT 토큰 저장 | SecureStore                              | 보안 고려한 로컬 저장        |

## 4. 푸시 알림/앱 알림

| 항목      | 선택지             | 비고                          |
| :-------- | :----------------- | :---------------------------- |
| 푸시 알림 | Expo Notifications | 상담 답변 등 실시간 알림 제공 |

## 5. 파일 업로드/다운로드

| 항목          | 선택지                            | 비고                      |
| :------------ | :-------------------------------- | :------------------------ |
| 파일 업로드   | Expo DocumentPicker + AWS S3 연동 | 견적서 첨부 기능 구현     |
| 파일 다운로드 | expo-file-system                  | 견적서 파일 다운로드 제공 |

## 6. 에러/로깅

| 항목           | 선택지              | 비고                              |
| :------------- | :------------------ | :-------------------------------- |
| 에러 모니터링  | Sentry (선택)       | 앱 에러 및 크래시 리포트 모니터링 |
| 앱 크래시 복구 | Expo Error Recovery | 기본 크래시 대응 기능 활용        |

# 요약

- **Frontend Framework**: React Native + Expo + TypeScript
- **State Management**: Zustand (로컬) + React Query (서버)
- **Navigation**: React Navigation
- **WebSocket**: socket.io-client
- **Forms**: react-hook-form
- **Styling**: NativeWind (Tailwind 스타일)
- **Auth**: Expo AuthSession (카카오/구글/애플 소셜 로그인)
- **Notifications**: Expo Notifications
- **Storage**: SecureStore (JWT 보관)
- **File Handling**: Expo DocumentPicker, expo-file-system
- **Error Tracking**: Sentry (선택)

> 카페메이커 앱은 빠른 개발과 유지보수를 고려하여 Expo 기반으로 구축하고, 핵심 기능을 안정적으로 제공하기 위해 필수 기술 스택을 선택한다.

# 카페메이커 소비자 앱 내비게이션 및 유저 플로우 명세

## 1. 하단 탭바 구성

| 탭 이름   | 이동 경로                      | 비고                                  |
| :-------- | :----------------------------- | :------------------------------------ |
| 홈        | 메인 화면 (배너 + 주요 기능)   | 앱 진입 시 기본 화면                  |
| 상권 분석 | 상권 분석 페이지 (iframe 연결) | 외부 서비스 연동                      |
| 창업 견적 | 창업 견적 만들기 플로우        | 단계별 진행                           |
| 창업 문의 | 문의 목록 및 채팅방 진입       | 문의 작성, 실시간 상담                |
| 더보기    | 부가 메뉴 모음                 | 공지사항, 이벤트, 프로필 관리, FAQ 등 |

- 탭을 클릭하면 해당 최상단 화면으로 이동 (스택 초기화)

## 2. 각 탭 내 플로우

### 홈

- 배너 클릭 → 공지사항/이벤트 상세 화면으로 이동
- 주요 기능 버튼 클릭 → 해당 기능 탭으로 이동

### 상권 분석

- 외부 상권 분석 서비스 임베딩 (iframe)
- 별도 스택 없음 (외부 페이지 내 브라우징)

### 창업 견적

- 시작 → 예산 설정 → 평형 선택 → 인테리어 스타일 선택 → 메뉴 선택 → 원두 선택 → 견적 결과
- 각 단계별 "다음" 버튼으로 이동
- 뒤로가기 버튼 클릭 시 이전 단계로 이동

### 창업 문의

- 문의 목록 → 새 문의 작성 → 문의 제출 → 실시간 채팅방 이동
- 문의 목록 → 기존 문의 클릭 → 기존 채팅방 입장

### 더보기

- 공지사항 목록 → 공지사항 상세 보기
- 이벤트 목록 → 이벤트 상세 보기
- 창업 가이드
- 성공 사례
- FAQ (자주 묻는 질문)
- 창업 프로필 관리
- 저장한 견적/문의 목록 보기
- 설정
- 로그아웃

## 3. 뒤로가기 플로우

| 상황                        | 동작                                                |
| :-------------------------- | :-------------------------------------------------- |
| 견적 작성 중 단계 이동      | 이전 단계로 이동                                    |
| 문의 작성 중                | 나가기 시 경고 팝업 표시 (작성 중인 내용 삭제 주의) |
| 채팅방 내                   | 채팅방 종료 후 문의 목록으로 복귀                   |
| 공지사항/이벤트 상세        | 목록 화면으로 돌아가기                              |
| 최상단 탭 화면에서 뒤로가기 | Android: 앱 종료, iOS: 기본 무반응 또는 앱 최소화   |

## 4. 전체 앱 트리 구조

```
하단 탭바
├── 홈
│   ├── 배너 클릭 → 공지/이벤트 상세
│   └── 주요 기능 클릭 → 탭 이동
├── 상권 분석
│   └── 외부 서비스 iframe 로드
├── 창업 견적
│   └── 단계별 진행 (예산 → 평형 → 인테리어 → 메뉴 → 원두 → 결과)
├── 창업 문의
│   ├── 문의 작성 → 채팅방 생성
│   └── 기존 문의 → 채팅방 입장
└── 더보기
    ├── 공지사항
    ├── 이벤트
    ├── 창업 가이드
    ├── 성공 사례
    ├── FAQ
    ├── 창업 프로필 관리
    ├── 저장한 견적/문의 목록
    └── 설정 및 로그아웃
```

# 5. 화면별 와이어프레임 구상

## 홈 화면

```
[상단 배너 영역]
- 공지사항/이벤트 슬라이드 배너

[주요 기능 바로가기 메뉴 (2열 그리드)]
- 상권 분석
- 창업 견적 만들기
- 창업 문의
- 창업 가이드
- 성공 사례
- FAQ

[하단 탭바 고정]
```

## 상권 분석 화면

```
[페이지 상단]
- 제목: "상권 분석"

[본문]
- 외부 서비스 iframe 로드

[하단 탭바 고정]
```

## 창업 견적 만들기 플로우

### 시작 페이지

```
[상단]
- 제목: "나만의 카페 견적 만들기"

[본문]
- 시작하기 버튼
```

### 단계별 페이지

```
[상단]
- 현재 단계 표시 (예: 1/6)

[본문]
- 질문 텍스트
- 선택지 버튼 리스트

[하단]
- 이전/다음 버튼
```

### 견적 결과 페이지

```
[상단]
- 제목: "견적 결과"

[본문]
- 인테리어 비용
- 장비 비용
- 원두/재료 비용
- 총 예상 창업 비용

[하단]
- 저장하기 / 다운로드 / 문의 연결 버튼
```

## 창업 문의 화면

### 문의 목록 페이지

```
[상단]
- 제목: "창업 문의"

[본문]
- 내 문의 리스트
- 새 문의 작성 버튼
```

### 문의 작성 페이지

```
[상단]
- 제목: "문의 작성"

[본문]
- 제목 입력
- 내용 입력
- 견적서 첨부 (선택)
- 제출하기 버튼
```

### 채팅방 페이지

```
[상단]
- 문의 제목

[본문]
- 채팅 메시지 리스트
- 입력창 (텍스트 입력 + 보내기 버튼)
```

## 더보기 화면

```
[상단]
- 제목: "더보기"

[목록 항목]
- 공지사항
- 이벤트
- 창업 가이드
- 성공 사례
- FAQ
- 창업 프로필 관리
- 저장한 견적/문의 목록
- 설정
- 로그아웃

[하단 탭바 고정]
```

# 요약

- 하단 탭바 고정, 주요 기능에 빠르게 접근
- 홈 화면은 상단 배너 + 6개 기능 바로가기 구성
- 문의 및 견적 작성은 단계별 진행과 저장 유도
- 더보기 메뉴에 공지사항, 이벤트, 가이드, 성공 사례, FAQ까지 포함

> 명확하고 직관적인 플로우와 구성으로 사용자 편의성을 극대화한다.

# 📦 EAS Build 실제 커맨드 정리

```bash
# 1. EAS CLI 설치 (최초 1회)
yarn global add eas-cli

# 2. Expo 로그인
eas login

# 3. EAS 프로젝트 설정
eas build:configure

# 4. iOS 앱 빌드 (ipa 파일 만들기)
eas build -p ios --profile production

# 5. Android 앱 빌드 (aab 파일 만들기)
eas build -p android --profile production

# 6. 빌드 진행 상황 확인
eas build:list

# 7. 빌드 완료된 파일 다운로드 링크 확인
eas build:list
```

---

# ✅ 애플스토어/플레이스토어 앱 등재 시 체크리스트

## [iOS - App Store Connect]

- [ ] Apple Developer 계정 가입 ($99/년)
- [ ] App Store Connect에 앱 등록
- [ ] 아이콘 1024x1024 준비 (투명도 X)
- [ ] 스플래시 스크린 설정 완료
- [ ] 스크린샷 준비 (iPhone SE, iPhone 14, iPad)
- [ ] 앱 설명/키워드/메뉴 문구 준비
- [ ] 개인정보처리방침 URL 준비
- [ ] 심사용 테스트 계정 준비 (로그인 필요시)
- [ ] 권한, 카메라 권한 필요시 Info.plist에 사유 기입

## [Android - Google Play Console]

- [ ] Google Play Console 계정 가입 ($25 일회성)
- [ ] Play Console에 새 앱 등록
- [ ] 아이콘 512x512 준비
- [ ] 스플래시 스크린 설정 완료
- [ ] 스크린샷 준비 (휴대폰, 태블릿)
- [ ] 앱 설명/키워드/카테고리 선택
- [ ] 개인정보처리방침 URL 준비
- [ ] 앱 서명 키 등록
- [ ] 개발자 규정 확인 후 내부 테스트로 문제 검수

---

# 🚀 빌드 참고 팁 (아이콘, 스플래시 화면 설정 등)

## [아이콘 설정]

`app.json` 또는 `app.config.js` 파일에 추가

```json
{
  "expo": {
    "name": "CafeMaker",
    "slug": "cafe-maker",
    "icon": "./assets/icon.png"
  }
}
```

- 사이즈 512x512 이상 권장 (iOS는 1024x1024)
- 투명도 X

## [스플래시 화면 설정]

```json
{
  "expo": {
    "splash": {
      "image": "./assets/splash.png",
      "resizeMode": "cover",
      "backgroundColor": "#ffffff"
    }
  }
}
```

- 이미지 1242x2436 이상 권장
- `resizeMode: cover` 권장 (보기에 추천)

## [권한 설정]

```json
{
  "expo": {
    "ios": {
      "infoPlist": {
        "NSCameraUsageDescription": "사진 업로드를 위해 카메라 권한이 필요합니다.",
        "NSLocationWhenInUseUsageDescription": "현재 위치를 활용하여 주변 상권 분석 기능을 제공합니다."
      }
    },
    "android": {
      "permissions": ["CAMERA", "ACCESS_FINE_LOCATION"]
    }
  }
}
```

## [초기 빌드 참고]

- 빌드 전에 `expo-optimize` 명령으로 이미지 최적화

```bash
yarn expo-optimize
```

- 프로덕션용 빌드에서 디버깅 비활성화 가능

---

# 📢 요약

> **Expo로 개발 → EAS Build로 앱 파일 만들기 → 각 스토어에 업로드**

이 과정으로 "카페메이커" 앱 출시가 가능해집니다.
